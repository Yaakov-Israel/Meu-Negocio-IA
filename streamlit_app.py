import streamlit as st
import os
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.prompts import ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, MessagesPlaceholder
from langchain.chains import LLMChain
from langchain.memory import ConversationBufferMemory
from langchain.schema import HumanMessage, AIMessage
import google.generativeai as genai
from PIL import Image 

# --- Configura√ß√£o da P√°gina Streamlit ---
st.set_page_config(page_title="Assistente PME Pro", layout="wide", initial_sidebar_state="expanded")

# --- Carregar API Key e Configurar Modelo ---
GOOGLE_API_KEY = None
llm_model_instance = None 

try:
    GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]
except KeyError:
    st.error("üö® ERRO: Chave API 'GOOGLE_API_KEY' n√£o encontrada nos Segredos (Secrets) do Streamlit.")
    st.info("Adicione sua GOOGLE_API_KEY aos Segredos do seu app no painel do Streamlit Community Cloud.")
    st.stop()
except FileNotFoundError: 
    GOOGLE_API_KEY = os.environ.get("GOOGLE_API_KEY") 
    if not GOOGLE_API_KEY:
        st.error("üö® ERRO: Chave API n√£o encontrada nos Segredos do Streamlit nem como vari√°vel de ambiente.")
        st.info("Configure GOOGLE_API_KEY nos Segredos do Streamlit Cloud ou defina como vari√°vel de ambiente local.")
        st.stop()

if not GOOGLE_API_KEY or not GOOGLE_API_KEY.strip():
    st.error("üö® ERRO: GOOGLE_API_KEY n√£o foi carregada ou est√° vazia.")
    st.stop()
else:
    try:
        genai.configure(api_key=GOOGLE_API_KEY)
        llm_model_instance = ChatGoogleGenerativeAI(model="gemini-1.5-flash",
                                     temperature=0.7,
                                     google_api_key=GOOGLE_API_KEY,
                                     convert_system_message_to_human=True)
        st.sidebar.success("‚úÖ Modelo LLM (Gemini) inicializado!")
    except Exception as e:
        st.error(f"üò• ERRO AO INICIALIZAR O MODELO LLM DO GOOGLE: {e}")
        st.info("Verifique sua chave API, se a 'Generative Language API' est√° ativa no Google Cloud e suas cotas.")
        st.stop()

# --- Classe do Agente (AssistentePMEPro) ---
class AssistentePMEPro:
    def __init__(self, llm_passed_model): 
        if llm_passed_model is None:
            st.error("‚ùå Erro cr√≠tico: Agente PME Pro tentou ser inicializado sem um modelo LLM.")
            st.stop()
        self.llm = llm_passed_model 
        
        self.memoria_plano_negocios = ConversationBufferMemory(memory_key="historico_chat_plano", return_messages=True)
        self.memoria_controle_financeiro = ConversationBufferMemory(memory_key="historico_chat_financeiro", return_messages=True) # Mantida para o futuro
        self.memoria_calculo_precos = ConversationBufferMemory(memory_key="historico_chat_precos", return_messages=True)

    def _criar_cadeia_simples(self, system_message_content, human_message_content_template="{solicitacao_usuario}"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            HumanMessagePromptTemplate.from_template(human_message_content_template)
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, verbose=False)

    def _criar_cadeia_conversacional(self, system_message_content, memoria_especifica, memory_key_placeholder="historico_chat"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            MessagesPlaceholder(variable_name=memory_key_placeholder), 
            HumanMessagePromptTemplate.from_template("{input_usuario}")
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, memory=memoria_especifica, verbose=False)

    def marketing_digital_guiado(self):
        # ... (c√≥digo da fun√ß√£o marketing_digital_guiado como na vers√£o anterior - INALTERADO)
        st.header("üöÄ Marketing Digital Inteligente para sua Empresa")
        st.markdown("Bem-vindo! Preencha os campos abaixo para criarmos juntos uma estrat√©gia de marketing digital eficaz usando IA.")
        with st.form(key='marketing_form_guiado_v7'):
            st.markdown("##### üìã Conte-nos sobre seu Neg√≥cio e Objetivos")
            publico_alvo = st.text_input("1. Quem voc√™ quer alcan√ßar?", key="mdg_publico_v7")
            produto_servico = st.text_input("2. Qual produto ou servi√ßo principal voc√™ oferece?", key="mdg_produto_v7")
            objetivo_campanha = st.selectbox("3. Qual o principal objetivo com esta a√ß√£o de marketing?", ["", "Aumentar vendas online", "Gerar mais contatos (leads)", "Fortalecer o reconhecimento da marca", "Aumentar o engajamento"], key="mdg_objetivo_v7")
            st.markdown("---")
            mensagem_principal = st.text_area("4. Qual mensagem chave voc√™ quer comunicar?", key="mdg_mensagem_v7")
            diferencial = st.text_input("5. O que torna seu produto/servi√ßo especial?", key="mdg_diferencial_v7")
            st.markdown("---")
            descricao_imagem = st.text_input("6. Ideia para imagem (opcional):", key="mdg_img_v7")
            descricao_video = st.text_input("7. Ideia para v√≠deo (opcional):", key="mdg_video_v7")
            orcamento_ideia = st.text_input("8. Ideia de or√ßamento para esta a√ß√£o (opcional):", key="mdg_orcamento_v7")
            redes_opcoes = { "N√£o tenho certeza, preciso de sugest√£o": "Sugest√£o da IA", "Instagram": "Instagram", "Facebook": "Facebook", "TikTok": "TikTok", "LinkedIn": "LinkedIn", "WhatsApp Business": "WhatsApp", "E-mail Marketing": "E-mail Marketing", "Google Ads/Meu Neg√≥cio": "Google", "Integrada": "Integrada"}
            rede_social_alvo_label = st.selectbox("9. Canal digital principal ou pedir sugest√£o?", options=list(redes_opcoes.keys()), key="mdg_canal_v7")
            rede_social_alvo = redes_opcoes[rede_social_alvo_label]
            submit_button = st.form_submit_button(label='Gerar Meu Guia de Marketing com IA üöÄ')

        if submit_button:
            if not all([publico_alvo, produto_servico, objetivo_campanha, mensagem_principal, diferencial]):
                st.warning("Por favor, preencha os campos sobre P√∫blico, Produto/Servi√ßo, Objetivo, Mensagem e Diferencial.")
            else:
                system_message_marketing = "Voc√™ √© o \"Assistente PME Pro\", um consultor especialista em Marketing Digital com IA para pequenas empresas. Seu objetivo √© guiar o usu√°rio a criar uma estrat√©gia de marketing digital eficaz, baseado nos melhores princ√≠pios de marketing (como os de Kotler) e nas capacidades da IA."
                prompt_llm_marketing = f"Um dono de pequena empresa preencheu o seguinte formul√°rio para obter um guia pr√°tico para Marketing Digital com IA:\n- P√∫blico-Alvo: {publico_alvo}\n- Produto/Servi√ßo Principal: {produto_servico}\n- Principal Diferencial: {diferencial}\n- Objetivo Principal com Marketing Digital: {objetivo_campanha}\n- Mensagem Chave: {mensagem_principal}\n- Ideia para Imagem (se houver): {descricao_imagem or 'N√£o especificado'}\n- Ideia para V√≠deo (se houver): {descricao_video or 'N√£o especificado'}\n- Or√ßamento Estimado (se houver): {orcamento_ideia or 'N√£o especificado'}\n- Canal Digital em Mente ou Pedido de Sugest√£o: {rede_social_alvo}\n\nCom base nisso, forne√ßa um GUIA ESTRAT√âGICO E PR√ÅTICO, incluindo:\n1. Diagn√≥stico R√°pido e Oportunidade com IA.\n2. Canal(is) Priorit√°rio(s) (com justificativa se pedi sugest√£o, ou como otimizar o escolhido com IA).\n3. Estrat√©gias de Conte√∫do Inteligente: Tipos de conte√∫do, como IA pode ajudar (ideias, rascunhos), 2 exemplos de T√çTULOS/POSTS para meu neg√≥cio.\n4. Ferramenta de IA Recomendada (Gratuita/Baixo Custo): UMA ferramenta e como ajudaria.\n5. Primeiros 3 Passos Acion√°veis para usar IA no marketing.\n6. M√©trica Chave de Sucesso Inicial.\nTom: Mentor experiente, pr√°tico, encorajador. Linguagem clara. Foco em plano inicial acion√°vel."
                with st.spinner("O Assistente PME Pro est√° elaborando seu guia de marketing... üí°"):
                    cadeia_mkt = self._criar_cadeia_simples(system_message_marketing)
                    resposta_llm = cadeia_mkt.run(solicitacao_usuario=prompt_llm_marketing)
                st.markdown("### üí° Seu Guia Personalizado de Marketing Digital com IA:")
                st.markdown(resposta_llm)

    def conversar_plano_de_negocios(self, input_usuario):
        # ... (c√≥digo da fun√ß√£o conversar_plano_de_negocios como na vers√£o anterior - INALTERADO)
        system_message_plano = "Voc√™ √© o \"Assistente PME Pro\", um consultor de neg√≥cios especialista em IA. Sua tarefa √© ajudar um empreendedor a ESBO√áAR e depois DETALHAR um PLANO DE NEG√ìCIOS. Voc√™ faz perguntas UMA DE CADA VEZ para coletar informa√ß√µes. Use linguagem clara e seja encorajador.\n\n**FLUXO DA CONVERSA:**\n\n**IN√çCIO DA CONVERSA / PEDIDO INICIAL:**\nSe o usu√°rio indicar que quer criar um plano de neg√≥cios (ex: \"Crie meu plano de neg√≥cios\", \"Quero ajuda com meu plano\", \"sim\" para um bot√£o de iniciar plano), SUA PRIMEIRA PERGUNTA DEVE SER: \"Perfeito! Para come√ßarmos a esbo√ßar seu plano de neg√≥cios, qual √© o seu ramo de atua√ß√£o principal?\"\n\n**COLETA PARA O ESBO√áO:**\nAp√≥s saber o ramo, continue fazendo UMA PERGUNTA POR VEZ para obter informa√ß√µes para as seguintes se√ß√µes (n√£o precisa ser exatamente nesta ordem, mas cubra-as):\n1.  Nome da Empresa\n2.  Miss√£o da Empresa\n3.  Vis√£o da Empresa\n4.  Principais Objetivos\n5.  Produtos/Servi√ßos Principais\n6.  P√∫blico-Alvo Principal\n7.  Principal Diferencial\n8.  Ideias Iniciais de Marketing e Vendas\n9.  Ideias Iniciais de Opera√ß√µes\n10. Estimativas Financeiras Muito B√°sicas\n\n**GERA√á√ÉO DO ESBO√áO:**\nQuando voc√™ sentir que coletou informa√ß√µes suficientes para estas 10 √°reas, VOC√ä DEVE PERGUNTAR:\n\"Com as informa√ß√µes que reunimos at√© agora, voc√™ gostaria que eu montasse um primeiro ESBO√áO do seu plano de neg√≥cios? Ele ter√° as se√ß√µes principais que discutimos.\"\n\nSe o usu√°rio disser \"sim\":\n    - Gere um ESBO√áO do plano de neg√≥cios com as se√ß√µes: Sum√°rio Executivo, Descri√ß√£o da Empresa, Produtos e Servi√ßos, P√∫blico-Alvo e Diferenciais, Estrat√©gias Iniciais de Marketing e Vendas, Opera√ß√µes Iniciais, Panorama Financeiro Inicial.\n    - No final do esbo√ßo, ADICIONE: \"Este √© um esbo√ßo inicial para organizar suas ideias. Ele pode ser muito mais detalhado e aprofundado.\"\n    - ENT√ÉO, PERGUNTE: \"Este esbo√ßo inicial te ajuda a visualizar melhor? Gostaria de DETALHAR este plano de neg√≥cios agora? Podemos aprofundar cada se√ß√£o, e voc√™ poder√° me fornecer mais informa√ß√µes (e no futuro, at√© mesmo subir documentos).\"\n\n**DETALHAMENTO DO PLANO (SE O USU√ÅRIO ACEITAR):**\nSe o usu√°rio disser \"sim\" para detalhar:\n    - Responda com entusiasmo: \"√ìtimo! Para detalharmos, vamos focar em cada se√ß√£o do plano. Aplicaremos princ√≠pios de administra√ß√£o e marketing (como os de Chiavenato e Kotler) para enriquecer a an√°lise.\"\n    - ENT√ÉO, PERGUNTE: \"Em qual se√ß√£o do plano de neg√≥cios voc√™ gostaria de come√ßar a aprofundar ou fornecer mais detalhes? Por exemplo, 'An√°lise de Mercado', 'Estrat√©gias de Marketing Detalhadas', ou 'Proje√ß√µes Financeiras'?\"\n    - A partir da escolha, fa√ßa perguntas espec√≠ficas para aquela se√ß√£o."
        cadeia = self._criar_cadeia_conversacional(system_message_plano, self.memoria_plano_negocios, memory_key_placeholder="historico_chat_plano")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

    def conversar_controle_financeiro(self, input_usuario): # Mantida para futura reativa√ß√£o, mas n√£o no menu
        system_message_financeiro = "Voc√™ √© o \"Assistente PME Pro\", um consultor financeiro especialista em IA para pequenas empresas. Sua tarefa √© ajudar o empreendedor a entender e iniciar um CONTROLE FINANCEIRO b√°sico. Voc√™ faz perguntas UMA DE CADA VEZ.\n\n- Se a conversa est√° come√ßando ou o usu√°rio diz algo como \"Quero ajuda com controle financeiro\" ou \"sim\" para uma pergunta inicial sobre o tema, sua PRIMEIRA pergunta DEVE SER: \"Entendido! Para come√ßarmos a organizar suas finan√ßas, qual √© o principal tipo de receita da sua empresa atualmente?\"\n- Continue com perguntas para entender: Outras fontes de receita, despesas fixas, despesas vari√°veis, se j√° utiliza alguma ferramenta de controle.\n- Ap√≥s coletar informa√ß√µes b√°sicas, PERGUNTE: \"Com base no que conversamos, gostaria que eu gerasse um resumo da sua situa√ß√£o financeira atual e sugest√µes de como estruturar uma planilha de controle de fluxo de caixa simples e uma de despesas?\"\n- Se o usu√°rio disser \"sim\", forne√ßa: a) Resumo textual. b) Estrutura para planilha de Fluxo de Caixa (colunas: Data, Descri√ß√£o, Entrada, Sa√≠da, Saldo). c) Estrutura para Planilha de Despesas (Categorias, Valor Mensal Estimado). d) Dica sobre separar finan√ßas pessoais das empresariais.\n- AP√ìS apresentar as sugest√µes, pergunte: \"Isso te d√° um ponto de partida? Podemos detalhar alguma dessas planilhas ou discutir como analisar esses n√∫meros e gerar alguns gr√°ficos simples com base nos dados que voc√™ me fornecer?\""
        cadeia = self._criar_cadeia_conversacional(system_message_financeiro, self.memoria_controle_financeiro, memory_key_placeholder="historico_chat_financeiro")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

    def calcular_precos_interativo(self, input_usuario, descricao_imagem_contexto=None):
        # PROMPT DO SISTEMA ATUALIZADO
        system_message_precos = f"""
        Voc√™ √© o "Assistente PME Pro", especialista em precifica√ß√£o com IA.
        Sua tarefa √© ajudar o usu√°rio a definir o pre√ßo de venda de um produto ou servi√ßo, atuando como um consultor que busca as informa√ß√µes necess√°rias.
        Voc√™ faz perguntas UMA DE CADA VEZ e guia o usu√°rio.
        {(f"Contexto da imagem que o usu√°rio enviou: '{descricao_imagem_contexto}'. Use isso se for relevante para identificar o produto.") if descricao_imagem_contexto else ""}

        **FLUXO DA CONVERSA PARA PRECIFICAR:**

        **1. SAUDA√á√ÉO E PERGUNTA INICIAL (SEMPRE FA√áA ESTA PRIMEIRO QUANDO O USU√ÅRIO ENTRAR NESTA FUNCIONALIDADE):**
           "Ol√°! Sou o Assistente PME Pro, pronto para te ajudar com a precifica√ß√£o. Para come√ßar, o produto ou servi√ßo que voc√™ quer precificar √© algo que voc√™ COMPRA E REVENDE, ou √© algo que sua empresa MESMA PRODUZ/CRIA?"

        **2. SE O USU√ÅRIO ESCOLHER "COMPRA E REVENDE":**
           a. PERGUNTE: "Entendido, √© para revenda. Qual √© o nome ou tipo espec√≠fico do produto?" (Ex: SSD Interno 1TB Western Digital Blue, Camiseta XYZ)
           b. PERGUNTE: "Qual o seu CUSTO DE AQUISI√á√ÉO por unidade deste produto? (Quanto voc√™ paga ao seu fornecedor por cada um)."
           c. PERGUNTE: "Em qual CIDADE e ESTADO (Ex: Juiz de Fora - MG) sua loja ou neg√≥cio principal opera? Isso nos ajudar√° a considerar o mercado."
           d. AP√ìS OBTER ESSAS INFORMA√á√ïES, DIGA (simulando a prepara√ß√£o para a busca):
              "Ok, tenho as informa√ß√µes b√°sicas: produto '{nome_do_produto_informado}', seu custo de R${custo_informado} em {cidade_estado_informado}.
              Agora, o passo CRUCIAL √© entendermos o pre√ßo de mercado. **Estou preparando para fazer uma an√°lise de pre√ßos praticados para produtos similares na sua regi√£o.** (No futuro, esta ser√° uma busca real na web).
              Enquanto eu 'analiso' o mercado (o que farei com base no meu conhecimento geral por enquanto), para adiantarmos: Qual MARGEM DE LUCRO (em porcentagem, ex: 20%, 50%, 100%) voc√™ gostaria de ter sobre o seu custo de R${custo_informado}? Ou voc√™ j√° tem um PRE√áO DE VENDA ALVO em mente?"
           e. QUANDO O USU√ÅRIO RESPONDER A MARGEM/PRE√áO ALVO:
              - Calcule o pre√ßo de venda sugerido (Custo / (1 - %MargemDesejada)) ou (Custo + (Custo * %MarkupDesejado)). Explique o c√°lculo de forma simples.
              - APRESENTE O PRE√áO CALCULADO e diga: "Com base no seu custo e na margem desejada, o pre√ßo de venda seria R$ X.XX.
                Lembre-se: ap√≥s voc√™ fazer sua pesquisa de mercado real (sugiro buscar em 3-5 concorrentes online e locais), compare este pre√ßo calculado com os pre√ßos praticados. Se estiver muito diferente, precisaremos ajustar a margem ou analisar os custos."
              - PERGUNTE: "Este pre√ßo inicial faz sentido? Quer simular com outra margem?"

        **3. SE O USU√ÅRIO ESCOLHER "PRODUZ/CRIA":**
           a. PERGUNTE: "√ìtimo, √© produ√ß√£o pr√≥pria! Qual o nome do produto ou tipo de servi√ßo que voc√™ cria/oferece?"
           b. PERGUNTE sobre CUSTOS DIRETOS DE MATERIAL/INSUMOS: "Para produzir UMA unidade (ou realizar UM servi√ßo), quais s√£o os custos diretos de material ou insumos? Por favor, me d√™ uma estimativa."
           c. PERGUNTE sobre M√ÉO DE OBRA DIRETA: "Quanto tempo de trabalho (seu ou de funcion√°rios) √© gasto diretamente na produ√ß√£o de UMA unidade ou na presta√ß√£o de UMA vez o servi√ßo? E qual o custo estimado dessa m√£o de obra por unidade/servi√ßo?"
           d. PERGUNTE sobre CUSTOS FIXOS MENSAIS TOTAIS: "Quais s√£o seus custos fixos mensais totais (aluguel, luz, internet, sal√°rios administrativos, etc.) que precisam ser cobertos?"
           e. PERGUNTE sobre VOLUME DE PRODU√á√ÉO/VENDAS MENSAL ESPERADO: "Quantas unidades desse produto voc√™ espera vender por m√™s, ou quantos servi√ßos espera prestar? Isso nos ajudar√° a ratear os custos fixos por unidade."
           f. AP√ìS OBTER ESSAS INFORMA√á√ïES, explique: "Com esses dados, podemos calcular o Custo Total Unit√°rio. Depois, adicionaremos sua margem de lucro. Existem m√©todos como Markup ou Margem de Contribui√ß√£o."
           g. PERGUNTE: "Qual MARGEM DE LUCRO (em porcentagem) voc√™ gostaria de adicionar sobre o custo total de produ√ß√£o para definirmos o pre√ßo de venda?"
           h. QUANDO O USU√ÅRIO RESPONDER A MARGEM:
              - Calcule o pre√ßo de venda sugerido.
              - APRESENTE O PRE√áO CALCULADO e diga: "Com base nos seus custos e na margem desejada, o pre√ßo de venda sugerido seria R$ X.XX."
              - PERGUNTE: "Este pre√ßo cobre todos os seus custos e te d√° a lucratividade esperada? Como ele se compara ao que voc√™ imagina que o mercado pagaria?"

        **FINALIZA√á√ÉO DA INTERA√á√ÉO (PARA AMBOS OS CASOS):**
        - Ap√≥s uma sugest√£o de pre√ßo, sempre ofere√ßa: "Podemos refinar este c√°lculo, simular outros cen√°rios ou discutir estrat√©gias de precifica√ß√£o?"

        Mantenha a conversa fluida e profissional, mas acess√≠vel. O objetivo √© entregar o 'bolo pronto com a velinha', ou seja, uma an√°lise e sugest√£o de pre√ßo fundamentada.
        """
        cadeia = self._criar_cadeia_conversacional(system_message_precos, self.memoria_calculo_precos, memory_key_placeholder="historico_chat_precos")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

# --- Interface Principal Streamlit ---
if llm_model_instance:
    if 'agente_pme' not in st.session_state:
        st.session_state.agente_pme = AssistentePMEPro(llm_passed_model=llm_model_instance)
    agente = st.session_state.agente_pme

    st.sidebar.image("https://i.imgur.com/rGkzKxN.png", width=100)
    st.sidebar.title("Assistente PME Pro")
    st.sidebar.markdown("IA para seu Neg√≥cio Decolar!")
    st.sidebar.markdown("---")

    opcoes_menu = {
        "P√°gina Inicial": "pagina_inicial",
        "Marketing Digital com IA (Guia)": "marketing_guiado",
        "Elaborar Plano de Neg√≥cios com IA": "plano_negocios",
        "C√°lculo de Pre√ßos Inteligente": "calculo_precos"
    }

    if 'area_selecionada' not in st.session_state:
        st.session_state.area_selecionada = "P√°gina Inicial"
    
    # Inicializar display de chats e outros estados de sess√£o necess√°rios
    for key_area_op in opcoes_menu.values():
        if key_area_op and f"chat_display_{key_area_op}" not in st.session_state:
            st.session_state[f"chat_display_{key_area_op}"] = []
    
    if 'start_marketing_form' not in st.session_state:
        st.session_state.start_marketing_form = False
    if 'last_uploaded_image_info_pricing' not in st.session_state:
        st.session_state.last_uploaded_image_info_pricing = None
    if 'processed_image_id_pricing' not in st.session_state:
        st.session_state.processed_image_id_pricing = None


    area_selecionada_label = st.sidebar.radio(
        "Como posso te ajudar hoje?",
        options=list(opcoes_menu.keys()),
        key='sidebar_selection_v13', 
        index=list(opcoes_menu.keys()).index(st.session_state.area_selecionada) if st.session_state.area_selecionada in opcoes_menu else 0
    )

    # L√≥gica de transi√ß√£o e inicializa√ß√£o de estado ao mudar de aba
    if area_selecionada_label != st.session_state.area_selecionada:
        st.session_state.area_selecionada = area_selecionada_label
        current_section_key_temp = opcoes_menu.get(st.session_state.area_selecionada)
        
        if st.session_state.area_selecionada != "C√°lculo de Pre√ßos Inteligente": # Limpa info da imagem se sair da aba de pre√ßos
            st.session_state.last_uploaded_image_info_pricing = None
            st.session_state.processed_image_id_pricing = None

        if current_section_key_temp == "plano_negocios" and not st.session_state.get(f"chat_display_{current_section_key_temp}", []):
            initial_ai_message = "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
            st.session_state[f"chat_display_{current_section_key_temp}"] = [{"role": "assistant", "content": initial_ai_message}]
            agente.memoria_plano_negocios.clear()
            agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message)
        elif current_section_key_temp == "calculo_precos" and not st.session_state.get(f"chat_display_{current_section_key_temp}", []):
            initial_ai_message = "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
            st.session_state[f"chat_display_{current_section_key_temp}"] = [{"role": "assistant", "content": initial_ai_message}]
            agente.memoria_calculo_precos.clear()
            agente.memoria_calculo_precos.chat_memory.add_ai_message(initial_ai_message)
        elif current_section_key_temp == "marketing_guiado":
             st.session_state.start_marketing_form = False
        st.rerun()

    current_section_key = opcoes_menu.get(st.session_state.area_selecionada)

    # --- RENDERIZA√á√ÉO DA P√ÅGINA SELECIONADA ---

    if current_section_key == "pagina_inicial":
        st.title("üåü Bem-vindo ao Assistente PME Pro! üåü")
        st.markdown("Sou seu parceiro de IA pronto para ajudar sua pequena ou m√©dia empresa a crescer e se organizar melhor.")
        st.markdown("---")
        
        cols_buttons = st.columns(len(opcoes_menu)-1) 
        btn_idx = 0
        for nome_menu_btn, chave_secao_btn in opcoes_menu.items():
            if chave_secao_btn != "pagina_inicial":
                button_label = nome_menu_btn.split(" com IA")[0] if " com IA" in nome_menu_btn else nome_menu_btn
                if cols_buttons[btn_idx].button(button_label, key=f"btn_goto_{chave_secao_btn}_v4", use_container_width=True): # Nova key para bot√µes
                    st.session_state.area_selecionada = nome_menu_btn
                    # L√≥gica de inicializa√ß√£o de chat/estado para a se√ß√£o espec√≠fica
                    if chave_secao_btn == "plano_negocios" and not st.session_state.get(f"chat_display_{chave_secao_btn}",[]):
                        initial_msg = "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
                        st.session_state[f"chat_display_{chave_secao_btn}"] = [{"role": "assistant", "content": initial_msg}]
                        agente.memoria_plano_negocios.clear()
                        agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_msg)
                    elif chave_secao_btn == "calculo_precos" and not st.session_state.get(f"chat_display_{chave_secao_btn}",[]):
                        initial_msg = "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
                        st.session_state[f"chat_display_{chave_secao_btn}"] = [{"role": "assistant", "content": initial_msg}]
                        agente.memoria_calculo_precos.clear()
                        agente.memoria_calculo_precos.chat_memory.add_ai_message(initial_msg)
                    elif chave_secao_btn == "marketing_guiado":
                        st.session_state.start_marketing_form = False
                    st.rerun()
                btn_idx +=1
        st.balloons()

    elif current_section_key == "marketing_guiado":
        agente.marketing_digital_guiado()

    elif current_section_key == "plano_negocios":
        st.header("üìù Elaborando seu Plano de Neg√≥cios com IA")
        st.caption("Converse comigo para construirmos seu plano passo a passo.")
        chat_display_key_pn = f"chat_display_{current_section_key}"
        
        if not st.session_state.get(chat_display_key_pn, []):
            initial_ai_message_pn = "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
            st.session_state[chat_display_key_pn] = [{"role": "assistant", "content": initial_ai_message_pn}]
            if not agente.memoria_plano_negocios.chat_memory.messages:
                agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message_pn)
        
        for msg_info_pn in st.session_state[chat_display_key_pn]:
            with st.chat_message(msg_info_pn["role"]):
                st.markdown(msg_info_pn["content"])
        prompt_usuario_pn = st.chat_input("Sua resposta ou diga 'Crie meu plano de neg√≥cios'")
        if prompt_usuario_pn:
            st.session_state[chat_display_key_pn].append({"role": "user", "content": prompt_usuario_pn})
            with st.chat_message("user"): st.markdown(prompt_usuario_pn)
            with st.spinner("Assistente PME Pro est√° processando... ü§î"):
                resposta_ai_pn = agente.conversar_plano_de_negocios(prompt_usuario_pn)
            st.session_state[chat_display_key_pn].append({"role": "assistant", "content": resposta_ai_pn})
            with st.chat_message("assistant"): st.markdown(resposta_ai_pn)
        
        if st.sidebar.button("Reiniciar Plano de Neg√≥cios", key="btn_reset_plano_v5"): # Key √∫nica
            initial_ai_message_pn_reset = "Ok, vamos recome√ßar seu plano de neg√≥cios! Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
            st.session_state[chat_display_key_pn] = [{"role": "assistant", "content": initial_ai_message_pn_reset}]
            agente.memoria_plano_negocios.clear()
            agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message_pn_reset)
            st.rerun()

    elif current_section_key == "calculo_precos":
        st.header("üí≤ C√°lculo de Pre√ßos Inteligente com IA")
        st.caption("Vamos definir os melhores pre√ßos para seus produtos ou servi√ßos!")
        chat_display_key_cp = f"chat_display_{current_section_key}"
        
        uploaded_image_pricing_cp = st.file_uploader("Envie uma imagem do produto (opcional):", type=["png", "jpg", "jpeg"], key="preco_img_uploader_v4") # Nova key
        
        descricao_imagem_para_contexto_ia = None
        if uploaded_image_pricing_cp is not None:
            # Processa a imagem somente se for uma nova imagem ou se a informa√ß√£o ainda n√£o foi "consumida"
            if st.session_state.get('processed_image_id_pricing') != uploaded_image_pricing_cp.id:
                try:
                    st.image(Image.open(uploaded_image_pricing_cp), caption=f"Imagem: {uploaded_image_pricing_cp.name}", width=150)
                    descricao_imagem_para_contexto_ia = f"O usu√°rio carregou uma imagem chamada '{uploaded_image_pricing_cp.name}'. Se esta imagem for do produto a ser precificado, use essa informa√ß√£o para guiar suas perguntas. Se j√° perguntou sobre o produto e o usu√°rio ainda n√£o respondeu, pode perguntar se esta imagem se refere ao produto em quest√£o."
                    st.session_state.last_uploaded_image_info_pricing = descricao_imagem_para_contexto_ia
                    st.session_state.processed_image_id_pricing = uploaded_image_pricing_cp.id 
                    st.info(f"Imagem '{uploaded_image_pricing_cp.name}' pronta para ser considerada no pr√≥ximo di√°logo.")
                except Exception as e:
                    st.error(f"Erro ao processar a imagem: {e}")
                    st.session_state.last_uploaded_image_info_pricing = None
                    st.session_state.processed_image_id_pricing = None
        
        if not st.session_state.get(chat_display_key_cp, []):
            initial_ai_message_cp = "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
            st.session_state[chat_display_key_cp] = [{"role": "assistant", "content": initial_ai_message_cp}]
            if not agente.memoria_calculo_precos.chat_memory.messages:
                agente.memoria_calculo_precos.chat_memory.add_ai_message(initial_ai_message_cp)
        
        for msg_info_cp in st.session_state[chat_display_key_cp]:
            with st.chat_message(msg_info_cp["role"]):
                st.markdown(msg_info_cp["content"])
        
        prompt_usuario_cp = st.chat_input("Sua resposta ou descreva o produto/servi√ßo para precificar:")
        if prompt_usuario_cp:
            st.session_state[chat_display_key_cp].append({"role": "user", "content": prompt_usuario_cp})
            with st.chat_message("user"): st.markdown(prompt_usuario_cp)
            
            # Usa a informa√ß√£o da imagem se ela foi rec√©m-carregada e ainda n√£o "consumida" no prompt
            contexto_img_atual = st.session_state.get('last_uploaded_image_info_pricing')

            with st.spinner("Assistente PME Pro est√° calculando... üìà"):
                resposta_ai_cp = agente.calcular_precos_interativo(prompt_usuario_cp, descricao_imagem_contexto=contexto_img_atual)
            
            # Limpa a informa√ß√£o da imagem do estado da sess√£o AP√ìS ser usada no prompt
            if contexto_img_atual:
                st.session_state.last_uploaded_image_info_pricing = None
            
            st.session_state[chat_display_key_cp].append({"role": "assistant", "content": resposta_ai_cp})
            with st.chat_message("assistant"): st.markdown(resposta_ai_cp)

        if st.sidebar.button("Reiniciar C√°lculo de Pre√ßos", key="btn_reset_precos_v4"): # Nova key
            initial_ai_message_cp_reset = "Ok, vamos come√ßar um novo c√°lculo de pre√ßos! Voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
            st.session_state[chat_display_key_cp] = [{"role": "assistant", "content": initial_ai_message_cp_reset}]
            agente.memoria_calculo_precos.clear()
            agente.memoria_calculo_precos.chat_memory.add_ai_message(initial_ai_message_cp_reset)
            st.session_state.last_uploaded_image_info_pricing = None
            st.session_state.processed_image_id_pricing = None
            st.rerun()
else:
    st.error("üö® O Assistente PME Pro n√£o p√¥de ser iniciado. Verifique a API Key e o modelo LLM.")

st.sidebar.markdown("---")
st.sidebar.info("Desenvolvido por Yaakov com seu Assistente PME Pro")
