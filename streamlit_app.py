import streamlit as st
import os
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.prompts import ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, MessagesPlaceholder
from langchain.chains import LLMChain
from langchain.memory import ConversationBufferMemory # Importado para todas as mem√≥rias de chat
from langchain.schema import HumanMessage, AIMessage # Importado para todos os chats
import google.generativeai as genai

# --- Configura√ß√£o da P√°gina Streamlit ---
st.set_page_config(page_title="Assistente PME Pro", layout="wide", initial_sidebar_state="expanded")

# --- Carregar API Key e Configurar Modelo ---
GOOGLE_API_KEY = None
llm = None

try:
    GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]
except KeyError:
    st.error("üö® ERRO: Chave API 'GOOGLE_API_KEY' n√£o encontrada nos Segredos (Secrets) do Streamlit.")
    st.info("Adicione sua GOOGLE_API_KEY aos Segredos do seu app no painel do Streamlit Community Cloud.")
    st.stop()
except FileNotFoundError: 
    GOOGLE_API_KEY = os.environ.get("GOOGLE_API_KEY") 
    if not GOOGLE_API_KEY:
        st.error("üö® ERRO: Chave API n√£o encontrada nos Segredos do Streamlit nem como vari√°vel de ambiente.")
        st.info("Configure GOOGLE_API_KEY nos Segredos do Streamlit Cloud ou defina como vari√°vel de ambiente local.")
        st.stop()

if not GOOGLE_API_KEY or not GOOGLE_API_KEY.strip():
    st.error("üö® ERRO: GOOGLE_API_KEY n√£o foi carregada ou est√° vazia.")
    st.stop()
else:
    try:
        genai.configure(api_key=GOOGLE_API_KEY)
        llm = ChatGoogleGenerativeAI(model="gemini-1.5-flash",
                                     temperature=0.7,
                                     google_api_key=GOOGLE_API_KEY,
                                     convert_system_message_to_human=True)
        st.sidebar.success("‚úÖ Modelo LLM (Gemini) inicializado!")
    except Exception as e:
        st.error(f"üò• ERRO AO INICIALIZAR O MODELO LLM DO GOOGLE: {e}")
        st.info("Verifique sua chave API, se a 'Generative Language API' est√° ativa no Google Cloud e suas cotas.")
        st.stop()

# --- Classe do Agente (AssistentePMEPro) ---
class AssistentePMEPro:
    def __init__(self, llm_model):
        if llm_model is None:
            st.error("‚ùå Erro cr√≠tico: Agente sem modelo LLM.")
            st.stop()
        self.llm = llm_model
        
        # Mem√≥rias espec√≠ficas para cada funcionalidade de chat
        if 'memoria_plano_negocios_agente' not in st.session_state:
            st.session_state.memoria_plano_negocios_agente = ConversationBufferMemory(memory_key="historico_chat_plano", return_messages=True)
        self.memoria_plano_negocios = st.session_state.memoria_plano_negocios_agente

        if 'memoria_controle_financeiro_agente' not in st.session_state:
            st.session_state.memoria_controle_financeiro_agente = ConversationBufferMemory(memory_key="historico_chat_financeiro", return_messages=True)
        self.memoria_controle_financeiro = st.session_state.memoria_controle_financeiro_agente


    def _criar_cadeia_simples(self, system_message_content, human_message_content_template="{solicitacao_usuario}"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            HumanMessagePromptTemplate.from_template(human_message_content_template)
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, verbose=False)

    def _criar_cadeia_conversacional(self, system_message_content, memoria, memory_key="historico_chat"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            MessagesPlaceholder(variable_name=memory_key), 
            HumanMessagePromptTemplate.from_template("{input_usuario}")
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, memory=memoria, verbose=False)

    def marketing_digital_guiado(self):
        st.header("üöÄ Marketing Digital Inteligente para sua Empresa")
        st.markdown("Bem-vindo! Preencha os campos abaixo para criarmos juntos uma estrat√©gia de marketing digital eficaz usando IA.")
        
        with st.form(key='marketing_form_guiado_v6'): # Nova key para o form
            st.markdown("##### üìã Conte-nos sobre seu Neg√≥cio e Objetivos")
            publico_alvo = st.text_input("1. Quem voc√™ quer alcan√ßar?", key="mdg_publico_v6")
            produto_servico = st.text_input("2. Qual produto ou servi√ßo principal voc√™ oferece?", key="mdg_produto_v6")
            objetivo_campanha = st.selectbox("3. Qual o principal objetivo com esta a√ß√£o de marketing?",
                                             ["", "Aumentar vendas online", "Gerar mais contatos (leads)",
                                              "Fortalecer o reconhecimento da marca", "Aumentar o engajamento"],
                                             key="mdg_objetivo_v6")
            st.markdown("---")
            mensagem_principal = st.text_area("4. Qual mensagem chave voc√™ quer comunicar?", key="mdg_mensagem_v6")
            diferencial = st.text_input("5. O que torna seu produto/servi√ßo especial?", key="mdg_diferencial_v6")
            st.markdown("---")
            descricao_imagem = st.text_input("6. Ideia para imagem (opcional):", key="mdg_img_v6")
            descricao_video = st.text_input("7. Ideia para v√≠deo (opcional):", key="mdg_video_v6")
            orcamento_ideia = st.text_input("8. Ideia de or√ßamento para esta a√ß√£o (opcional):", key="mdg_orcamento_v6")
            redes_opcoes = { "N√£o tenho certeza, preciso de sugest√£o": "Sugest√£o da IA", "Instagram": "Instagram", "Facebook": "Facebook", "TikTok": "TikTok", "LinkedIn": "LinkedIn", "WhatsApp Business": "WhatsApp", "E-mail Marketing": "E-mail Marketing", "Google Ads/Meu Neg√≥cio": "Google", "Integrada": "Integrada"}
            rede_social_alvo_label = st.selectbox("9. Canal digital principal ou pedir sugest√£o?", options=list(redes_opcoes.keys()), key="mdg_canal_v6")
            rede_social_alvo = redes_opcoes[rede_social_alvo_label]
            submit_button = st.form_submit_button(label='Gerar Meu Guia de Marketing com IA üöÄ')

        if submit_button:
            if not all([publico_alvo, produto_servico, objetivo_campanha, mensagem_principal, diferencial]):
                st.warning("Por favor, preencha os campos sobre P√∫blico, Produto/Servi√ßo, Objetivo, Mensagem e Diferencial.")
            else:
                system_message_marketing = """
                Voc√™ √© o "Assistente PME Pro", um consultor especialista em Marketing Digital com IA para pequenas empresas.
                Seu objetivo √© guiar o usu√°rio a criar uma estrat√©gia de marketing digital eficaz,
                baseado nos melhores princ√≠pios de marketing (como os de Kotler) e nas capacidades da IA.
                """
                prompt_llm_marketing = f"""
                Um dono de pequena empresa preencheu o seguinte formul√°rio para obter um guia pr√°tico para Marketing Digital com IA:
                - P√∫blico-Alvo: {publico_alvo}
                - Produto/Servi√ßo Principal: {produto_servico}
                - Principal Diferencial: {diferencial}
                - Objetivo Principal com Marketing Digital: {objetivo_campanha}
                - Mensagem Chave: {mensagem_principal}
                - Ideia para Imagem (se houver): {descricao_imagem or "N√£o especificado"}
                - Ideia para V√≠deo (se houver): {descricao_video or "N√£o especificado"}
                - Or√ßamento Estimado (se houver): {orcamento_ideia or "N√£o especificado"}
                - Canal Digital em Mente ou Pedido de Sugest√£o: {rede_social_alvo}

                Com base nisso, forne√ßa um GUIA ESTRAT√âGICO E PR√ÅTICO, incluindo:
                1. Diagn√≥stico R√°pido e Oportunidade com IA.
                2. Canal(is) Priorit√°rio(s) (com justificativa se pedi sugest√£o, ou como otimizar o escolhido com IA).
                3. Estrat√©gias de Conte√∫do Inteligente: Tipos de conte√∫do, como IA pode ajudar (ideias, rascunhos), 2 exemplos de T√çTULOS/POSTS para meu neg√≥cio.
                4. Ferramenta de IA Recomendada (Gratuita/Baixo Custo): UMA ferramenta e como ajudaria.
                5. Primeiros 3 Passos Acion√°veis para usar IA no marketing.
                6. M√©trica Chave de Sucesso Inicial.
                Tom: Mentor experiente, pr√°tico, encorajador. Linguagem clara. Foco em plano inicial acion√°vel.
                """
                with st.spinner("O Assistente PME Pro est√° elaborando seu guia de marketing... üí°"):
                    cadeia_mkt = self._criar_cadeia_simples(system_message_marketing)
                    resposta_llm = cadeia_mkt.run(solicitacao_usuario=prompt_llm_marketing)

                st.markdown("### üí° Seu Guia Personalizado de Marketing Digital com IA:")
                st.markdown(resposta_llm)

    def conversar_plano_de_negocios(self, input_usuario):
        system_message_plano = """
        Voc√™ √© o "Assistente PME Pro", um consultor de neg√≥cios especialista em IA.
        Sua tarefa √© ajudar um empreendedor a ESBO√áAR e DETALHAR um PLANO DE NEG√ìCIOS.
        Voc√™ faz perguntas UMA DE CADA VEZ para coletar informa√ß√µes.

        ETAPA 1: ESBO√áO INICIAL
        - Se a conversa est√° come√ßando ou o usu√°rio diz "Crie meu plano de neg√≥cios" (ou similar), sua PRIMEIRA pergunta DEVE SER: "Perfeito! Para come√ßarmos a esbo√ßar seu plano de neg√≥cios, qual √© o seu ramo de atua√ß√£o principal?"
        - Continue fazendo perguntas para cobrir as se√ß√µes b√°sicas: Nome da empresa, Miss√£o, Vis√£o, Objetivos, Produtos/Servi√ßos, P√∫blico-alvo, Diferencial, Marketing e Vendas (ideias iniciais), Opera√ß√µes (ideias iniciais), Finan√ßas (estimativas bem b√°sicas).
        - Ap√≥s coletar informa√ß√µes suficientes para um ESBO√áO, PERGUNTE: "Com as informa√ß√µes que temos, gostaria que eu tentasse montar um primeiro ESBO√áO do seu plano de neg√≥cios com as se√ß√µes principais?"
        - Se o usu√°rio disser "sim", gere um ESBO√áO CLARO e CONCISO do plano de neg√≥cios. Adicione uma nota de que √© um esbo√ßo.
        - AP√ìS apresentar o esbo√ßo, pergunte: "Este esbo√ßo inicial te ajuda? Gostaria de detalhar mais alguma se√ß√£o ou criar um plano mais completo agora, onde poderemos incluir mais informa√ß√µes e an√°lises (como as de Kotler e Chiavenato)?"

        ETAPA 2: PLANO DETALHADO (se o usu√°rio aceitar)
        - Se o usu√°rio disser "sim" para detalhar, responda: "√ìtimo! Para detalharmos, vamos focar em cada se√ß√£o. Voc√™ poder√° me fornecer mais dados. Em qual se√ß√£o do plano de neg√≥cios voc√™ gostaria de come√ßar a aprofundar ou fornecer mais detalhes? (Ex: An√°lise de Mercado, Estrat√©gias de Marketing Detalhadas, Proje√ß√µes Financeiras, etc.)"
        - A partir da√≠, guie o usu√°rio para fornecer informa√ß√µes mais espec√≠ficas.
        """
        cadeia = self._criar_cadeia_conversacional(system_message_plano, self.memoria_plano_negocios, memory_key="historico_chat_plano")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

    def conversar_controle_financeiro(self, input_usuario):
        system_message_financeiro = """
        Voc√™ √© o "Assistente PME Pro", um consultor financeiro especialista em IA para pequenas empresas.
        Sua tarefa √© ajudar o empreendedor a entender e iniciar um CONTROLE FINANCEIRO b√°sico.
        Voc√™ faz perguntas UMA DE CADA VEZ.

        - Se a conversa est√° come√ßando ou o usu√°rio diz algo como "Quero ajuda com controle financeiro", sua PRIMEIRA pergunta DEVE SER: "Entendido! Para come√ßarmos a organizar suas finan√ßas, qual √© o principal tipo de receita da sua empresa atualmente?"
        - Continue com perguntas para entender:
            - Outras fontes de receita (se houver).
            - Principais categorias de despesas fixas (aluguel, sal√°rios, pro-labore, etc.).
            - Principais categorias de despesas vari√°veis (mat√©ria-prima, comiss√µes, marketing, etc.).
            - Se j√° utiliza alguma ferramenta ou planilha de controle.
        - Ap√≥s coletar algumas informa√ß√µes b√°sicas, PERGUNTE: "Com base no que conversamos, gostaria que eu gerasse um resumo da sua situa√ß√£o financeira atual e sugest√µes de como estruturar uma planilha de controle de fluxo de caixa simples?"
        - Se o usu√°rio disser "sim", forne√ßa:
            a) Um breve resumo textual das receitas e despesas identificadas.
            b) Uma sugest√£o de estrutura para uma planilha de Fluxo de Caixa Simples (colunas: Data, Descri√ß√£o, Entrada, Sa√≠da, Saldo).
            c) Uma sugest√£o de estrutura para uma Planilha de Despesas Fixas e Vari√°veis (Categorias, Valor Mensal Estimado).
            d) Uma dica sobre a import√¢ncia de separar finan√ßas pessoais das empresariais.
        - AP√ìS apresentar as sugest√µes, pergunte: "Isso te d√° um ponto de partida? Podemos detalhar alguma dessas planilhas ou discutir como analisar esses n√∫meros?"
        """
        cadeia = self._criar_cadeia_conversacional(system_message_financeiro, self.memoria_controle_financeiro, memory_key="historico_chat_financeiro")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

# --- Interface Principal Streamlit ---
if llm:
    if 'agente_pme' not in st.session_state:
        st.session_state.agente_pme = AssistentePMEPro(llm_model=llm)
    agente = st.session_state.agente_pme

    st.sidebar.image("https://i.imgur.com/rGkzKxN.png", width=100)
    st.sidebar.title("Assistente PME Pro")
    st.sidebar.markdown("IA para seu Neg√≥cio Decolar!")
    st.sidebar.markdown("---")

    opcoes_menu = {
        "P√°gina Inicial": "pagina_inicial",
        "Marketing Digital com IA (Guia)": "marketing_guiado",
        "Elaborar Plano de Neg√≥cios com IA": "plano_negocios",
        "Controle Financeiro Inteligente": "controle_financeiro" # NOVA OP√á√ÉO
    }

    if 'area_selecionada' not in st.session_state:
        st.session_state.area_selecionada = "P√°gina Inicial"
    
    # Hist√≥ricos de chat espec√≠ficos para cada funcionalidade conversacional
    if "chat_display_plano_negocios" not in st.session_state:
         st.session_state.chat_display_plano_negocios = []
    if "chat_display_controle_financeiro" not in st.session_state:
         st.session_state.chat_display_controle_financeiro = []


    area_selecionada_label = st.sidebar.radio(
        "Como posso te ajudar hoje?",
        options=list(opcoes_menu.keys()),
        key='sidebar_selection_v10', 
        index=list(opcoes_menu.keys()).index(st.session_state.area_selecionada) if st.session_state.area_selecionada in opcoes_menu else 0
    )

    if area_selecionada_label != st.session_state.area_selecionada:
        st.session_state.area_selecionada = area_selecionada_label
        # Prepara a sauda√ß√£o inicial ao entrar nas abas de chat pela primeira vez na sess√£o
        if st.session_state.area_selecionada == "Elaborar Plano de Neg√≥cios com IA" and not st.session_state.chat_display_plano_negocios:
            initial_ai_message_plano = "Ol√°! Sou seu Assistente PME Pro. Para come√ßarmos a esbo√ßar seu plano de neg√≥cios, qual √© o seu ramo de atua√ß√£o principal?"
            st.session_state.chat_display_plano_negocios = [{"role": "assistant", "content": initial_ai_message_plano}]
            agente.memoria_plano_negocios.clear()
            agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message_plano)
        elif st.session_state.area_selecionada == "Controle Financeiro Inteligente" and not st.session_state.chat_display_controle_financeiro:
            initial_ai_message_fin = "Ol√°! Sou seu Assistente PME Pro. Quer ter o controle financeiro da sua empresa de forma mais inteligente? Se sim, para come√ßarmos, qual √© o principal tipo de receita da sua empresa atualmente?"
            st.session_state.chat_display_controle_financeiro = [{"role": "assistant", "content": initial_ai_message_fin}]
            agente.memoria_controle_financeiro.clear()
            agente.memoria_controle_financeiro.chat_memory.add_ai_message(initial_ai_message_fin)
        elif st.session_state.area_selecionada == "Marketing Digital com IA (Guia)":
             st.session_state.start_marketing_form = False # Para mostrar o bot√£o de iniciar o form de marketing
        st.rerun()


    if st.session_state.area_selecionada == "P√°gina Inicial":
        st.title("üåü Bem-vindo ao Assistente PME Pro! üåü")
        st.markdown("Sou seu parceiro de IA pronto para ajudar sua pequena ou m√©dia empresa a crescer e se organizar melhor.")
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        with col1:
            if st.button("üöÄ Guia de Marketing Digital", key="btn_goto_marketing_v3"):
                st.session_state.area_selecionada = "Marketing Digital com IA (Guia)"
                st.session_state.start_marketing_form = False 
                st.rerun()
        with col2:
            if st.button("üìù Esbo√ßar Plano de Neg√≥cios", key="btn_goto_plano_v4"):
                st.session_state.area_selecionada = "Elaborar Plano de Neg√≥cios com IA"
                if not st.session_state.chat_display_plano_negocios:
                     initial_ai_message = "Ol√°! Sou seu Assistente PME Pro. Para come√ßarmos a esbo√ßar seu plano de neg√≥cios, qual √© o seu ramo de atua√ß√£o principal?"
                     st.session_state.chat_display_plano_negocios = [{"role": "assistant", "content": initial_ai_message}]
                     agente.memoria_plano_negocios.clear()
                     agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message)
                st.rerun()
        with col3: # Novo Bot√£o para Controle Financeiro
            if st.button("üí∞ Organizar Controle Financeiro", key="btn_goto_financeiro"):
                st.session_state.area_selecionada = "Controle Financeiro Inteligente"
                if not st.session_state.chat_display_controle_financeiro:
                     initial_ai_message = "Ol√°! Sou seu Assistente PME Pro. Quer ter o controle financeiro da sua empresa de forma mais inteligente? Se sim, para come√ßarmos, qual √© o principal tipo de receita da sua empresa atualmente?"
                     st.session_state.chat_display_controle_financeiro = [{"role": "assistant", "content": initial_ai_message}]
                     agente.memoria_controle_financeiro.clear()
                     agente.memoria_controle_financeiro.chat_memory.add_ai_message(initial_ai_message)
                st.rerun()
        st.balloons()

    elif st.session_state.area_selecionada == "Marketing Digital com IA (Guia)":
        agente.marketing_digital_guiado()

    elif st.session_state.area_selecionada == "Elaborar Plano de Neg√≥cios com IA":
        st.header("üìù Elaborando seu Plano de Neg√≥cios com IA")
        st.caption("Converse comigo para construirmos seu plano passo a passo.")
        for msg_info in st.session_state.chat_display_plano_negocios:
            with st.chat_message(msg_info["role"]):
                st.markdown(msg_info["content"])
        prompt_usuario = st.chat_input("Sua resposta ou diga 'Crie meu plano de neg√≥cios'")
        if prompt_usuario:
            st.session_state.chat_display_plano_negocios.append({"role": "user", "content": prompt_usuario})
            with st.chat_message("user"): st.markdown(prompt_usuario)
            with st.spinner("Assistente PME Pro est√° processando... ü§î"):
                resposta_ai = agente.conversar_plano_de_negocios(prompt_usuario)
            st.session_state.chat_display_plano_negocios.append({"role": "assistant", "content": resposta_ai})
            with st.chat_message("assistant"): st.markdown(resposta_ai)
        if st.sidebar.button("Reiniciar Plano de Neg√≥cios", key="btn_reset_plano_v4"):
            initial_ai_message = "Ok, vamos recome√ßar seu plano de neg√≥cios! Qual √© o seu ramo de atua√ß√£o principal?"
            st.session_state.chat_display_plano_negocios = [{"role": "assistant", "content": initial_ai_message}]
            agente.memoria_plano_negocios.clear()
            agente.memoria_plano_negocios.chat_memory.add_ai_message(initial_ai_message)
            st.rerun()

    elif st.session_state.area_selecionada == "Controle Financeiro Inteligente": # NOVA SE√á√ÉO
        st.header("üìä Controle Financeiro Inteligente com IA")
        st.caption("Vamos organizar suas finan√ßas e obter insights valiosos!")
        for msg_info in st.session_state.chat_display_controle_financeiro:
            with st.chat_message(msg_info["role"]):
                st.markdown(msg_info["content"])
        prompt_usuario_fin = st.chat_input("Sua resposta ou diga 'Quero ajuda com meu financeiro'")
        if prompt_usuario_fin:
            st.session_state.chat_display_controle_financeiro.append({"role": "user", "content": prompt_usuario_fin})
            with st.chat_message("user"): st.markdown(prompt_usuario_fin)
            with st.spinner("Assistente PME Pro est√° analisando suas finan√ßas... üíπ"):
                resposta_ai_fin = agente.conversar_controle_financeiro(prompt_usuario_fin)
            st.session_state.chat_display_controle_financeiro.append({"role": "assistant", "content": resposta_ai_fin})
            with st.chat_message("assistant"): st.markdown(resposta_ai_fin)
        if st.sidebar.button("Reiniciar Controle Financeiro", key="btn_reset_financeiro"):
            initial_ai_message = "Certo! Vamos come√ßar do zero com seu controle financeiro. Qual √© o principal tipo de receita da sua empresa atualmente?"
            st.session_state.chat_display_controle_financeiro = [{"role": "assistant", "content": initial_ai_message}]
            agente.memoria_controle_financeiro.clear()
            agente.memoria_controle_financeiro.chat_memory.add_ai_message(initial_ai_message)
            st.rerun()
else:
    st.error("üö® O Assistente PME Pro n√£o p√¥de ser iniciado. Verifique a API Key e o modelo LLM.")

st.sidebar.markdown("---")
st.sidebar.info("Desenvolvido por Yaakov com seu Assistente PME Pro")
