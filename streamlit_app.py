import streamlit as st
import os
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.prompts import ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, MessagesPlaceholder
from langchain.chains import LLMChain
from langchain.memory import ConversationBufferMemory
from langchain.schema import HumanMessage, AIMessage
import google.generativeai as genai
from PIL import Image 

# --- Configura√ß√£o da P√°gina Streamlit ---
# T√≠tulo da aba do navegador e favicon podem ser ajustados aqui:
st.set_page_config(
    page_title="Assistente PME Pro", 
    layout="wide", 
    initial_sidebar_state="expanded",
    # page_icon="üöÄ"  # Exemplo de favicon com emoji, ou voc√™ pode usar uma URL para uma imagem .ico ou .png
)

# --- Carregar API Key e Configurar Modelo ---
GOOGLE_API_KEY = None
llm_model_instance = None 

try:
    GOOGLE_API_KEY = st.secrets["GOOGLE_API_KEY"]
except KeyError:
    st.error("üö® ERRO: Chave API 'GOOGLE_API_KEY' n√£o encontrada nos Segredos (Secrets) do Streamlit.")
    st.info("Adicione sua GOOGLE_API_KEY aos Segredos do seu app no painel do Streamlit Community Cloud.")
    st.stop()
except FileNotFoundError: 
    GOOGLE_API_KEY = os.environ.get("GOOGLE_API_KEY") 
    if not GOOGLE_API_KEY:
        st.error("üö® ERRO: Chave API n√£o encontrada nos Segredos do Streamlit nem como vari√°vel de ambiente.")
        st.info("Configure GOOGLE_API_KEY nos Segredos do Streamlit Cloud ou defina como vari√°vel de ambiente local.")
        st.stop()

if not GOOGLE_API_KEY or not GOOGLE_API_KEY.strip():
    st.error("üö® ERRO: GOOGLE_API_KEY n√£o foi carregada ou est√° vazia.")
    st.stop()
else:
    try:
        genai.configure(api_key=GOOGLE_API_KEY)
        llm_model_instance = ChatGoogleGenerativeAI(model="gemini-1.5-flash",
                                     temperature=0.75, 
                                     google_api_key=GOOGLE_API_KEY,
                                     convert_system_message_to_human=True)
        st.sidebar.success("‚úÖ Modelo LLM (Gemini) inicializado!")
    except Exception as e:
        st.error(f"üò• ERRO AO INICIALIZAR O MODELO LLM DO GOOGLE: {e}")
        st.info("Verifique sua chave API, se a 'Generative Language API' est√° ativa no Google Cloud e suas cotas.")
        st.stop()

# --- Classe do Agente (AssistentePMEPro) ---
class AssistentePMEPro:
    def __init__(self, llm_passed_model): 
        if llm_passed_model is None:
            st.error("‚ùå Erro cr√≠tico: Agente PME Pro tentou ser inicializado sem um modelo LLM.")
            st.stop()
        self.llm = llm_passed_model 
        
        self.memoria_plano_negocios = ConversationBufferMemory(memory_key="historico_chat_plano", return_messages=True)
        self.memoria_calculo_precos = ConversationBufferMemory(memory_key="historico_chat_precos", return_messages=True)
        self.memoria_gerador_ideias = ConversationBufferMemory(memory_key="historico_chat_ideias", return_messages=True)

    def _criar_cadeia_simples(self, system_message_content, human_message_content_template="{solicitacao_usuario}"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            HumanMessagePromptTemplate.from_template(human_message_content_template)
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, verbose=False)

    def _criar_cadeia_conversacional(self, system_message_content, memoria_especifica, memory_key_placeholder="historico_chat"):
        prompt_template = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(system_message_content),
            MessagesPlaceholder(variable_name=memory_key_placeholder), 
            HumanMessagePromptTemplate.from_template("{input_usuario}")
        ])
        return LLMChain(llm=self.llm, prompt=prompt_template, memory=memoria_especifica, verbose=False)

    def marketing_digital_guiado(self):
        st.header("üöÄ Marketing Digital com IA (Guia Pr√°tico)")
        st.markdown("Bem-vindo! Preencha os campos abaixo para criarmos juntos uma estrat√©gia de marketing digital eficaz usando IA.")
        with st.form(key='marketing_form_guiado_v9'): # Nova key
            st.markdown("##### üìã Conte-nos sobre seu Neg√≥cio e Objetivos")
            publico_alvo = st.text_input("1. Quem voc√™ quer alcan√ßar?", key="mdg_publico_v9")
            produto_servico = st.text_input("2. Qual produto ou servi√ßo principal voc√™ oferece?", key="mdg_produto_v9")
            objetivo_campanha = st.selectbox("3. Qual o principal objetivo com esta a√ß√£o de marketing?", ["", "Aumentar vendas online", "Gerar mais contatos (leads)", "Fortalecer o reconhecimento da marca", "Aumentar o engajamento"], key="mdg_objetivo_v9")
            st.markdown("---")
            mensagem_principal = st.text_area("4. Qual mensagem chave voc√™ quer comunicar?", key="mdg_mensagem_v9")
            diferencial = st.text_input("5. O que torna seu produto/servi√ßo especial?", key="mdg_diferencial_v9")
            st.markdown("---")
            descricao_imagem = st.text_input("6. Ideia para imagem (opcional):", key="mdg_img_v9")
            descricao_video = st.text_input("7. Ideia para v√≠deo (opcional):", key="mdg_video_v9")
            orcamento_ideia = st.text_input("8. Ideia de or√ßamento para esta a√ß√£o (opcional):", key="mdg_orcamento_v9")
            redes_opcoes = { "N√£o tenho certeza, preciso de sugest√£o": "Sugest√£o da IA", "Instagram": "Instagram", "Facebook": "Facebook", "TikTok": "TikTok", "LinkedIn": "LinkedIn", "WhatsApp Business": "WhatsApp", "E-mail Marketing": "E-mail Marketing", "Google Ads/Meu Neg√≥cio": "Google", "Integrada": "Integrada"}
            rede_social_alvo_label = st.selectbox("9. Canal digital principal ou pedir sugest√£o?", options=list(redes_opcoes.keys()), key="mdg_canal_v9")
            rede_social_alvo = redes_opcoes[rede_social_alvo_label]
            submit_button = st.form_submit_button(label='Gerar Meu Guia de Marketing com IA üöÄ')

        if submit_button:
            if not all([publico_alvo, produto_servico, objetivo_campanha, mensagem_principal, diferencial]):
                st.warning("Por favor, preencha os campos sobre P√∫blico, Produto/Servi√ßo, Objetivo, Mensagem e Diferencial.")
            else:
                system_message_marketing = "Voc√™ √© o \"Assistente PME Pro\", um consultor especialista em Marketing Digital com IA para pequenas empresas. Seu objetivo √© guiar o usu√°rio a criar uma estrat√©gia de marketing digital eficaz, baseado nos melhores princ√≠pios de marketing (como os de Kotler) e nas capacidades da IA."
                prompt_llm_marketing = f"Um dono de pequena empresa preencheu o seguinte formul√°rio para obter um guia pr√°tico para Marketing Digital com IA:\n- P√∫blico-Alvo: {publico_alvo}\n- Produto/Servi√ßo Principal: {produto_servico}\n- Principal Diferencial: {diferencial}\n- Objetivo Principal com Marketing Digital: {objetivo_campanha}\n- Mensagem Chave: {mensagem_principal}\n- Ideia para Imagem (se houver): {descricao_imagem or 'N√£o especificado'}\n- Ideia para V√≠deo (se houver): {descricao_video or 'N√£o especificado'}\n- Or√ßamento Estimado (se houver): {orcamento_ideia or 'N√£o especificado'}\n- Canal Digital em Mente ou Pedido de Sugest√£o: {rede_social_alvo}\n\nCom base nisso, forne√ßa um GUIA ESTRAT√âGICO E PR√ÅTICO, incluindo:\n1. Diagn√≥stico R√°pido e Oportunidade com IA.\n2. Canal(is) Priorit√°rio(s) (com justificativa se pedi sugest√£o, ou como otimizar o escolhido com IA).\n3. Estrat√©gias de Conte√∫do Inteligente: Tipos de conte√∫do, como IA pode ajudar (ideias, rascunhos), 2 exemplos de T√çTULOS/POSTS para meu neg√≥cio.\n4. Ferramenta de IA Recomendada (Gratuita/Baixo Custo): UMA ferramenta e como ajudaria.\n5. Primeiros 3 Passos Acion√°veis para usar IA no marketing.\n6. M√©trica Chave de Sucesso Inicial.\nTom: Mentor experiente, pr√°tico, encorajador. Linguagem clara. Foco em plano inicial acion√°vel."
                with st.spinner("O Assistente PME Pro est√° elaborando seu guia de marketing... üí°"):
                    cadeia_mkt = self._criar_cadeia_simples(system_message_marketing)
                    resposta_llm = cadeia_mkt.run(solicitacao_usuario=prompt_llm_marketing)
                st.markdown("### üí° Seu Guia Personalizado de Marketing Digital com IA:")
                st.markdown(resposta_llm)

    def conversar_plano_de_negocios(self, input_usuario):
        system_message_plano = "Voc√™ √© o \"Assistente PME Pro\", um consultor de neg√≥cios especialista em IA. Sua tarefa √© ajudar um empreendedor a ESBO√áAR e depois DETALHAR um PLANO DE NEG√ìCIOS. Voc√™ faz perguntas UMA DE CADA VEZ para coletar informa√ß√µes. Use linguagem clara e seja encorajador.\n\n**FLUXO DA CONVERSA:**\n\n**IN√çCIO DA CONVERSA / PEDIDO INICIAL:**\nSe o usu√°rio indicar que quer criar um plano de neg√≥cios (ex: \"Crie meu plano de neg√≥cios\", \"Quero ajuda com meu plano\", \"sim\" para um bot√£o de iniciar plano), SUA PRIMEIRA PERGUNTA DEVE SER: \"Perfeito! Para come√ßarmos a esbo√ßar seu plano de neg√≥cios, qual √© o seu ramo de atua√ß√£o principal?\"\n\n**COLETA PARA O ESBO√áO:**\nAp√≥s saber o ramo, continue fazendo UMA PERGUNTA POR VEZ para obter informa√ß√µes para as seguintes se√ß√µes (n√£o precisa ser exatamente nesta ordem, mas cubra-as):\n1.  Nome da Empresa\n2.  Miss√£o da Empresa\n3.  Vis√£o da Empresa\n4.  Principais Objetivos\n5.  Produtos/Servi√ßos Principais\n6.  P√∫blico-Alvo Principal\n7.  Principal Diferencial\n8.  Ideias Iniciais de Marketing e Vendas\n9.  Ideias Iniciais de Opera√ß√µes\n10. Estimativas Financeiras Muito B√°sicas\n\n**GERA√á√ÉO DO ESBO√áO:**\nQuando voc√™ sentir que coletou informa√ß√µes suficientes para estas 10 √°reas, VOC√ä DEVE PERGUNTAR:\n\"Com as informa√ß√µes que reunimos at√© agora, voc√™ gostaria que eu montasse um primeiro ESBO√áO do seu plano de neg√≥cios? Ele ter√° as se√ß√µes principais que discutimos.\"\n\nSe o usu√°rio disser \"sim\":\n    - Gere um ESBO√áO do plano de neg√≥cios com as se√ß√µes: Sum√°rio Executivo, Descri√ß√£o da Empresa, Produtos e Servi√ßos, P√∫blico-Alvo e Diferenciais, Estrat√©gias Iniciais de Marketing e Vendas, Opera√ß√µes Iniciais, Panorama Financeiro Inicial.\n    - No final do esbo√ßo, ADICIONE: \"Este √© um esbo√ßo inicial para organizar suas ideias. Ele pode ser muito mais detalhado e aprofundado.\"\n    - ENT√ÉO, PERGUNTE: \"Este esbo√ßo inicial te ajuda a visualizar melhor? Gostaria de DETALHAR este plano de neg√≥cios agora? Podemos aprofundar cada se√ß√£o, e voc√™ poder√° me fornecer mais informa√ß√µes (e no futuro, at√© mesmo subir documentos).\"\n\n**DETALHAMENTO DO PLANO (SE O USU√ÅRIO ACEITAR):**\nSe o usu√°rio disser \"sim\" para detalhar:\n    - Responda com entusiasmo: \"√ìtimo! Para detalharmos, vamos focar em cada se√ß√£o do plano. Aplicaremos princ√≠pios de administra√ß√£o e marketing (como os de Chiavenato e Kotler) para enriquecer a an√°lise.\"\n    - ENT√ÉO, PERGUNTE: \"Em qual se√ß√£o do plano de neg√≥cios voc√™ gostaria de come√ßar a aprofundar ou fornecer mais detalhes? Por exemplo, 'An√°lise de Mercado', 'Estrat√©gias de Marketing Detalhadas', ou 'Proje√ß√µes Financeiras'?\"\n    - A partir da escolha, fa√ßa perguntas espec√≠ficas para aquela se√ß√£o."
        cadeia = self._criar_cadeia_conversacional(system_message_plano, self.memoria_plano_negocios, memory_key_placeholder="historico_chat_plano")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

    def calcular_precos_interativo(self, input_usuario, descricao_imagem_contexto=None):
        system_message_precos = f"""
        Voc√™ √© o "Assistente PME Pro", especialista em precifica√ß√£o com IA.
        Sua tarefa √© ajudar o usu√°rio a definir o pre√ßo de venda de um produto ou servi√ßo, atuando como um consultor que busca as informa√ß√µes necess√°rias.
        Voc√™ faz perguntas UMA DE CADA VEZ e guia o usu√°rio.
        {(f"Contexto da imagem que o usu√°rio enviou: '{descricao_imagem_contexto}'. Considere esta informa√ß√£o ao falar sobre o produto.") if descricao_imagem_contexto else ""}

        **FLUXO DA CONVERSA PARA PRECIFICAR:**

        **1. PERGUNTA INICIAL (SEMPRE FA√áA ESTA PRIMEIRO QUANDO O USU√ÅRIO ENTRAR NESTA FUNCIONALIDADE):**
           "Ol√°! Sou o Assistente PME Pro, pronto para te ajudar com a precifica√ß√£o. Para come√ßar, o produto ou servi√ßo que voc√™ quer precificar √© algo que voc√™ COMPRA E REVENDE, ou √© algo que sua empresa MESMA PRODUZ/CRIA?"

        **2. SE O USU√ÅRIO ESCOLHER "COMPRA E REVENDE":**
           a. PERGUNTE: "Entendido, √© para revenda. Qual √© o nome ou tipo espec√≠fico do produto que voc√™ revende?" (Ex: SSD Interno 1TB Western Digital Blue, Camiseta XYZ)
           b. PERGUNTE: "Qual o seu CUSTO DE AQUISI√á√ÉO por unidade deste produto? (Quanto voc√™ paga ao seu fornecedor por cada um)."
           c. PERGUNTE: "Em qual CIDADE e ESTADO (Ex: Juiz de Fora - MG) sua loja ou neg√≥cio principal opera? Isso nos ajudar√° a considerar o mercado."
           d. AP√ìS OBTER ESSAS INFORMA√á√ïES, DIGA:
              "Ok, tenho as informa√ß√µes b√°sicas: produto '[NOME DO PRODUTO INFORMADO PELO USU√ÅRIO]', seu custo de R$[VALOR DO CUSTO INFORMADO] em [CIDADE/ESTADO INFORMADO].
              Agora, o passo CRUCIAL √© entendermos o pre√ßo de mercado. **Vou te ajudar a analisar os pre√ßos praticados para produtos similares na sua regi√£o.** (No futuro, este app poder√° fazer buscas autom√°ticas na web, mas por enquanto, vamos analisar juntos com base no seu conhecimento e no que eu posso inferir).
              Para termos um ponto de partida, qual MARGEM DE LUCRO (em porcentagem, ex: 20%, 50%, 100%) voc√™ gostaria de ter sobre o seu custo de R$[VALOR DO CUSTO INFORMADO]? Ou voc√™ j√° tem um PRE√áO DE VENDA ALVO em mente?"
           e. QUANDO O USU√ÅRIO RESPONDER A MARGEM/PRE√áO ALVO:
              - Calcule o pre√ßo de venda sugerido (Custo / (1 - %MargemDesejada/100)) ou (Custo * (1 + %MarkupDesejado/100)). Explique o c√°lculo de forma simples.
              - APRESENTE O PRE√áO CALCULADO e diga: "Com base no seu custo e na margem desejada, o pre√ßo de venda sugerido seria R$ X.XX.
                Para validar este pre√ßo, sugiro que voc√™ pesquise em pelo menos 3-5 concorrentes online e locais. Compare este pre√ßo calculado com os pre√ßos praticados. Se estiver muito diferente, precisaremos ajustar a margem ou reanalisar os custos e a estrat√©gia de precifica√ß√£o."
              - PERGUNTE: "Este pre√ßo inicial faz sentido? Quer simular com outra margem?"

        **3. SE O USU√ÅRIO ESCOLHER "PRODUZ/CRIA":**
           a. PERGUNTE: "Excelente! Para precificar seu produto/servi√ßo pr√≥prio, vamos detalhar os custos. Qual o nome do produto ou tipo de servi√ßo que voc√™ cria/oferece?"
           # ... (restante da l√≥gica para PRODUZ/CRIA como antes) ...
           b. PERGUNTE sobre CUSTOS DIRETOS DE MATERIAL/INSUMOS: "Quais s√£o os custos diretos de material ou insumos que voc√™ gasta para produzir UMA unidade do produto ou para realizar UMA vez o servi√ßo? Por favor, liste os principais itens e seus custos."
           c. PERGUNTE sobre M√ÉO DE OBRA DIRETA: "Quanto tempo de trabalho (seu ou de funcion√°rios) √© gasto diretamente na produ√ß√£o de UMA unidade ou na presta√ß√£o de UMA vez o servi√ßo? E qual o custo estimado dessa m√£o de obra por unidade/servi√ßo?"
           d. PERGUNTE sobre CUSTOS FIXOS MENSAIS TOTAIS: "Quais s√£o seus custos fixOS mensais totais (aluguel, luz, internet, sal√°rios administrativos, etc.) que precisam ser cobertos?"
           e. PERGUNTE sobre VOLUME DE PRODU√á√ÉO/VENDAS MENSAL ESPERADO: "Quantas unidades desse produto voc√™ espera vender por m√™s, ou quantos servi√ßos espera prestar? Isso nos ajudar√° a ratear os custos fixos por unidade."
           f. AP√ìS OBTER ESSAS INFORMA√á√ïES, explique: "Com esses dados, podemos calcular o Custo Total Unit√°rio. Depois, adicionaremos sua margem de lucro desejada. Existem m√©todos como Markup ou Margem de Contribui√ß√£o que podemos usar."
           g. PERGUNTE: "Qual MARGEM DE LUCRO (em porcentagem) voc√™ gostaria de adicionar sobre o custo total de produ√ß√£o para definirmos o pre√ßo de venda?"
           h. QUANDO O USU√ÅRIO RESPONDER A MARGEM:
              - Calcule o pre√ßo de venda sugerido.
              - APRESENTE O PRE√áO CALCULADO e diga: "Com base nos seus custos e na margem desejada, o pre√ßo de venda sugerido seria R$ X.XX."
              - PERGUNTE: "Este pre√ßo cobre todos os seus custos e te d√° a lucratividade esperada? Como ele se compara ao que voc√™ imagina que o mercado pagaria?"

        **FINALIZA√á√ÉO DA INTERA√á√ÉO (PARA AMBOS OS CASOS):**
        - Ap√≥s uma sugest√£o de pre√ßo, sempre ofere√ßa: "Podemos refinar este c√°lculo, simular outros cen√°rios ou discutir estrat√©gias de precifica√ß√£o com base nos princ√≠pios de marketing de Kotler?"

        Mantenha a conversa fluida e profissional, mas acess√≠vel. O objetivo √© entregar o 'bolo pronto com a velinha', ou seja, uma an√°lise e sugest√£o de pre√ßo fundamentada.
        """
        cadeia = self._criar_cadeia_conversacional(system_message_precos, self.memoria_calculo_precos, memory_key_placeholder="historico_chat_precos")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

    def gerar_ideias_para_negocios(self, input_usuario, contexto_arquivos=None):
        system_message_ideias = f"""
        Voc√™ √© o "Assistente PME Pro", um consultor de neg√≥cios especialista em IA, com foco em INOVA√á√ÉO e SOLU√á√ÉO DE PROBLEMAS.
        Sua tarefa √© ajudar empreendedores a gerar ideias criativas e pr√°ticas para seus neg√≥cios, seja para resolver dores, encontrar novas oportunidades ou inovar.
        Voc√™ faz perguntas UMA DE CADA VEZ para entender o contexto do usu√°rio.
        {(f"INFORMA√á√ÉO ADICIONAL FORNECIDA PELO USU√ÅRIO (pode ser de arquivos que ele carregou): '{contexto_arquivos}'. Por favor, CONSIDERE esta informa√ß√£o ao interagir e gerar ideias. Se for um arquivo de texto, use o conte√∫do. Se for uma imagem, pe√ßa ao usu√°rio para descrever como ela se relaciona com o desafio dele.") if contexto_arquivos else ""}

        **FLUXO DA CONVERSA:**

        **IN√çCIO DA CONVERSA / PEDIDO INICIAL:**
        - Se o usu√°rio indicar que quer ideias (ex: "Preciso de ideias para aumentar vendas", "Estou com dificuldade em X", "Como posso inovar meu servi√ßo Y?") ou simplesmente iniciar a conversa nesta se√ß√£o,
          SUA PRIMEIRA PERGUNTA DEVE SER (de forma emp√°tica e aberta): "Ol√°! Que bom que voc√™ quer explorar novas ideias. {('Recebi as informa√ß√µes dos arquivos que voc√™ carregou. ' if contexto_arquivos else 'Voc√™ tamb√©m pode carregar arquivos de texto ou imagens se achar que ajudam a dar contexto. ')} Para que eu possa te ajudar da melhor forma, conte-me um pouco mais sobre o principal desafio que voc√™ est√° enfrentando, a dor que sente no seu neg√≥cio, ou a √°rea espec√≠fica em que voc√™ gostaria de inovar ou receber sugest√µes."

        **EXPLORA√á√ÉO DO PROBLEMA/OPORTUNIDADE (SE NECESS√ÅRIO):**
        - Ap√≥s a primeira descri√ß√£o do usu√°rio, se precisar de mais clareza (e considerando o contexto de arquivos, se houver), fa√ßa UMA ou DUAS perguntas abertas para aprofundar, como:
            - "Interessante. Para eu entender melhor a dimens√£o disso, [fa√ßa uma pergunta espec√≠fica sobre o que ele disse ou o contexto do arquivo]?"
            - "Quais s√£o os principais obst√°culos ou dificuldades que voc√™ enfrenta atualmente em rela√ß√£o a isso?"
        - Ap√≥s o usu√°rio responder, ou se ele j√° deu um bom contexto (especialmente se forneceu arquivos), diga:
          "Entendido. Com base no que voc√™ me contou sobre [resuma brevemente o problema/dor/objetivo do usu√°rio, mencionando se informa√ß√µes de arquivos foram consideradas], vou gerar algumas ideias e sugest√µes para voc√™, aplicando princ√≠pios de marketing e administra√ß√£o para encontrar solu√ß√µes eficazes."
        - ENT√ÉO, gere de 3 a 5 ideias ou abordagens distintas e criativas. Para cada ideia:
            a. D√™ um **Nome ou T√≠tulo Curto e Chamativo**.
            b. **Descreva a Ideia:** Explique o conceito de forma clara e concisa (1-3 frases).
            c. **Benef√≠cio Principal:** Destaque o principal benef√≠cio ou solu√ß√£o que essa ideia traria.
            d. **Primeiro Passo Simples (Opcional, mas bom):** Se apropriado, sugira um primeiro passo muito pequeno e pr√°tico que o usu√°rio poderia dar para come√ßar a explorar essa ideia.

        **DISCUSS√ÉO E REFINAMENTO:**
        - Ap√≥s apresentar as ideias, PERGUNTE: "O que voc√™ achou dessas primeiras sugest√µes? Alguma delas te inspira ou parece particularmente promissora para o seu caso? Gostaria de explorar alguma delas com mais detalhes, ou talvez refinar o foco para gerarmos mais alternativas?"
        """
        cadeia = self._criar_cadeia_conversacional(system_message_ideias, self.memoria_gerador_ideias, memory_key_placeholder="historico_chat_ideias")
        resposta_ai = cadeia.predict(input_usuario=input_usuario)
        return resposta_ai

# --- Fun√ß√µes Utilit√°rias de Chat ---
def inicializar_ou_resetar_chat(area_chave, mensagem_inicial_ia, memoria_agente_instancia):
    chat_display_key = f"chat_display_{area_chave}"
    if chat_display_key not in st.session_state:
        st.session_state[chat_display_key] = []
    
    st.session_state[chat_display_key] = [{"role": "assistant", "content": mensagem_inicial_ia}]
    
    if memoria_agente_instancia:
        memoria_agente_instancia.clear()
        memoria_agente_instancia.chat_memory.add_ai_message(mensagem_inicial_ia)
    
    if area_chave == "calculo_precos":
        st.session_state.last_uploaded_image_info_pricing = None
        st.session_state.processed_image_id_pricing = None
    elif area_chave == "gerador_ideias":
        st.session_state.uploaded_file_info_ideias_for_prompt = None 
        st.session_state.processed_file_id_ideias = None


def exibir_chat_e_obter_input(area_chave, prompt_placeholder, funcao_conversa_agente, **kwargs_funcao_agente):
    chat_display_key = f"chat_display_{area_chave}"
    if chat_display_key not in st.session_state: 
        st.session_state[chat_display_key] = []

    for msg_info in st.session_state[chat_display_key]:
        with st.chat_message(msg_info["role"]):
            st.markdown(msg_info["content"])
    
    prompt_usuario = st.chat_input(prompt_placeholder, key=f"chat_input_{area_chave}_v5") 

    if prompt_usuario:
        st.session_state[chat_display_key].append({"role": "user", "content": prompt_usuario})
        with st.chat_message("user"):
            st.markdown(prompt_usuario)
        
        if area_chave == "calculo_precos": st.session_state.user_input_processed_pricing = True
        elif area_chave == "gerador_ideias": st.session_state.user_input_processed_ideias = True

        with st.spinner("Assistente PME Pro est√° processando... ü§î"):
            resposta_ai = funcao_conversa_agente(prompt_usuario, **kwargs_funcao_agente)
        
        st.session_state[chat_display_key].append({"role": "assistant", "content": resposta_ai})
        st.rerun()

# --- Interface Principal Streamlit ---
if llm_model_instance:
    if 'agente_pme' not in st.session_state:
        st.session_state.agente_pme = AssistentePMEPro(llm_passed_model=llm_model_instance)
    agente = st.session_state.agente_pme

    st.sidebar.image("https://i.imgur.com/rGkzKxN.png", width=100) 
    st.sidebar.title("Assistente PME Pro") 
    st.sidebar.markdown("IA para seu Neg√≥cio Decolar!")
    st.sidebar.markdown("---")

    opcoes_menu = {
        "P√°gina Inicial": "pagina_inicial",
        "Marketing Digital com IA (Guia)": "marketing_guiado",
        "Elaborar Plano de Neg√≥cios com IA": "plano_negocios",
        "C√°lculo de Pre√ßos Inteligente": "calculo_precos",
        "Gerador de Ideias para Neg√≥cios": "gerador_ideias" 
    }

    if 'area_selecionada' not in st.session_state:
        st.session_state.area_selecionada = "P√°gina Inicial"
    
    for nome_menu_init, chave_secao_init in opcoes_menu.items():
        if chave_secao_init and f"chat_display_{chave_secao_init}" not in st.session_state:
            st.session_state[f"chat_display_{chave_secao_init}"] = []
    
    if 'start_marketing_form' not in st.session_state: st.session_state.start_marketing_form = False
    if 'last_uploaded_image_info_pricing' not in st.session_state: st.session_state.last_uploaded_image_info_pricing = None
    if 'processed_image_id_pricing' not in st.session_state: st.session_state.processed_image_id_pricing = None
    if 'user_input_processed_pricing' not in st.session_state: st.session_state.user_input_processed_pricing = False
    
    if 'uploaded_file_info_ideias_for_prompt' not in st.session_state: st.session_state.uploaded_file_info_ideias_for_prompt = None 
    if 'processed_file_id_ideias' not in st.session_state: st.session_state.processed_file_id_ideias = None
    if 'user_input_processed_ideias' not in st.session_state: st.session_state.user_input_processed_ideias = False


    area_selecionada_label = st.sidebar.radio(
        "Como posso te ajudar hoje?",
        options=list(opcoes_menu.keys()),
        key='sidebar_selection_v16', 
        index=list(opcoes_menu.keys()).index(st.session_state.area_selecionada) if st.session_state.area_selecionada in opcoes_menu else 0
    )

    if area_selecionada_label != st.session_state.area_selecionada:
        st.session_state.area_selecionada = area_selecionada_label
        chave_secao_nav = opcoes_menu.get(st.session_state.area_selecionada)
        
        if st.session_state.area_selecionada != "C√°lculo de Pre√ßos Inteligente":
            st.session_state.last_uploaded_image_info_pricing = None
            st.session_state.processed_image_id_pricing = None
        if st.session_state.area_selecionada != "Gerador de Ideias para Neg√≥cios": 
            st.session_state.uploaded_file_info_ideias_for_prompt = None
            st.session_state.processed_file_id_ideias = None
        
        if chave_secao_nav == "marketing_guiado":
            st.session_state.start_marketing_form = False
        elif chave_secao_nav and chave_secao_nav != "pagina_inicial": 
            chat_display_key_nav = f"chat_display_{chave_secao_nav}"
            if not st.session_state.get(chat_display_key_nav, []): 
                msg_inicial_nav = ""
                memoria_agente_nav = None # Inicializa como None
                if chave_secao_nav == "plano_negocios":
                    msg_inicial_nav = "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
                    memoria_agente_nav = agente.memoria_plano_negocios
                elif chave_secao_nav == "calculo_precos":
                    msg_inicial_nav = "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
                    memoria_agente_nav = agente.memoria_calculo_precos
                elif chave_secao_nav == "gerador_ideias":
                    msg_inicial_nav = "Ol√°! Sou o Assistente PME Pro. Estou aqui para te ajudar a ter novas ideias para o seu neg√≥cio. Conte-me um pouco sobre um desafio, uma dor ou uma √°rea que voc√™ gostaria de inovar."
                    memoria_agente_nav = agente.memoria_gerador_ideias
                
                if msg_inicial_nav and memoria_agente_nav: # Garante que memoria_agente_nav n√£o √© None
                    inicializar_ou_resetar_chat(chave_secao_nav, msg_inicial_nav, memoria_agente_nav)
        st.rerun()

    current_section_key = opcoes_menu.get(st.session_state.area_selecionada)

    if current_section_key == "pagina_inicial":
        # >>>>> LINHA QUE VOC√ä PEDIU PARA ALTERAR <<<<<
        st.title("üöÄ Bem-vindo ao seu Assistente PME Pro!") 
        st.markdown("Sou seu parceiro de IA pronto para ajudar sua pequena ou m√©dia empresa a crescer e se organizar melhor.")
        st.markdown("Use o menu √† esquerda para explorar as ferramentas dispon√≠veis.")
        st.markdown("---")
        
        num_botoes_funcionais = len(opcoes_menu) -1 
        if num_botoes_funcionais > 0 :
            num_cols_render = min(num_botoes_funcionais, 3) 
            cols_botoes_pg_inicial = st.columns(num_cols_render)
            
            btn_idx_pg_inicial = 0
            for nome_menu_btn_pg, chave_secao_btn_pg in opcoes_menu.items():
                if chave_secao_btn_pg != "pagina_inicial":
                    col_para_botao_pg = cols_botoes_pg_inicial[btn_idx_pg_inicial % num_cols_render] 
                    button_label_pg = nome_menu_btn_pg.split(" com IA")[0].split(" para ")[0].replace("Elaborar ", "").replace(" Inteligente","").replace(" (Guia)","").replace(" (Criar Campanha)","")
                    if col_para_botao_pg.button(button_label_pg, key=f"btn_goto_{chave_secao_btn_pg}_v9", use_container_width=True): # Nova key
                        st.session_state.area_selecionada = nome_menu_btn_pg
                        if chave_secao_btn_pg == "marketing_guiado":
                            st.session_state.start_marketing_form = False
                        else: 
                            chat_display_key_btn_pg = f"chat_display_{chave_secao_btn_pg}"
                            if not st.session_state.get(chat_display_key_btn_pg,[]):
                                msg_inicial_btn_pg = ""
                                memoria_agente_btn_pg = None
                                if chave_secao_btn_pg == "plano_negocios": 
                                    msg_inicial_btn_pg = "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!"
                                    memoria_agente_btn_pg = agente.memoria_plano_negocios
                                elif chave_secao_btn_pg == "calculo_precos": 
                                    msg_inicial_btn_pg = "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?"
                                    memoria_agente_btn_pg = agente.memoria_calculo_precos
                                elif chave_secao_btn_pg == "gerador_ideias": 
                                    msg_inicial_btn_pg = "Ol√°! Sou o Assistente PME Pro. Estou aqui para te ajudar a ter novas ideias para o seu neg√≥cio. Conte-me um pouco sobre um desafio, uma dor ou uma √°rea que voc√™ gostaria de inovar."
                                    memoria_agente_btn_pg = agente.memoria_gerador_ideias
                                if msg_inicial_btn_pg and memoria_agente_btn_pg:
                                    inicializar_ou_resetar_chat(chave_secao_btn_pg, msg_inicial_btn_pg, memoria_agente_btn_pg)
                        st.rerun()
                    btn_idx_pg_inicial +=1
            st.balloons()

    elif current_section_key == "marketing_guiado":
        agente.marketing_digital_guiado()

    elif current_section_key == "plano_negocios":
        st.header("üìù Elaborando seu Plano de Neg√≥cios com IA")
        st.caption("Converse comigo para construirmos seu plano passo a passo.")
        if not st.session_state.get(f"chat_display_{current_section_key}", []):
            inicializar_ou_resetar_chat(current_section_key, "Ol√°! Sou seu Assistente PME Pro. Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!", agente.memoria_plano_negocios)
        exibir_chat_e_obter_input(current_section_key, "Sua resposta ou diga 'Crie meu plano de neg√≥cios'", agente.conversar_plano_de_negocios)
        if st.sidebar.button("Reiniciar Plano de Neg√≥cios", key="btn_reset_plano_v7"): 
            inicializar_ou_resetar_chat(current_section_key, "Ok, vamos recome√ßar seu plano de neg√≥cios! Se voc√™ gostaria de criar um plano de neg√≥cios, pode me dizer 'sim' ou 'vamos come√ßar'!", agente.memoria_plano_negocios)
            st.rerun()

    elif current_section_key == "calculo_precos":
        st.header("üí≤ C√°lculo de Pre√ßos Inteligente com IA")
        st.caption("Vamos definir os melhores pre√ßos para seus produtos ou servi√ßos!")
        if not st.session_state.get(f"chat_display_{current_section_key}", []):
            inicializar_ou_resetar_chat(current_section_key, "Ol√°! Bem-vindo ao assistente de C√°lculo de Pre√ßos. Para come√ßar, voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?", agente.memoria_calculo_precos)
        
        uploaded_image = st.file_uploader("Envie uma imagem do produto (opcional):", type=["png", "jpg", "jpeg"], key="preco_img_uploader_v7")
        descricao_imagem_para_ia = None # Ser√° preenchida se uma imagem for carregada
        if uploaded_image is not None:
            # Apenas processa a imagem e define a descri√ß√£o se for uma nova imagem
            if st.session_state.get('processed_image_id_pricing') != uploaded_image.id:
                try:
                    st.image(Image.open(uploaded_image), caption=f"Imagem: {uploaded_image.name}", width=150)
                    # Prepara a descri√ß√£o para ser usada no kwargs da fun√ß√£o de chat
                    descricao_imagem_para_ia = f"O usu√°rio carregou uma imagem chamada '{uploaded_image.name}'. Considere esta informa√ß√£o."
                    st.session_state.last_uploaded_image_info_pricing = descricao_imagem_para_ia
                    st.session_state.processed_image_id_pricing = uploaded_image.id 
                    st.info(f"Imagem '{uploaded_image.name}' pronta para ser considerada no pr√≥ximo di√°logo.")
                except Exception as e:
                    st.error(f"Erro ao processar a imagem: {e}")
                    st.session_state.last_uploaded_image_info_pricing = None # Limpa em caso de erro
                    st.session_state.processed_image_id_pricing = None
        
        kwargs_preco_chat = {}
        # Usa a informa√ß√£o da imagem que acabou de ser processada ou a que estava no session_state
        contexto_imagem_ativo = descricao_imagem_para_ia or st.session_state.get('last_uploaded_image_info_pricing')
        if contexto_imagem_ativo:
             kwargs_preco_chat['descricao_imagem_contexto'] = contexto_imagem_ativo
        
        exibir_chat_e_obter_input(current_section_key, "Sua resposta ou descreva o produto/servi√ßo", agente.calcular_precos_interativo, **kwargs_preco_chat)
        
        # Se um input do usu√°rio foi processado e havia informa√ß√£o de imagem, ela foi "consumida"
        if 'user_input_processed_pricing' in st.session_state and st.session_state.user_input_processed_pricing:
            if st.session_state.get('last_uploaded_image_info_pricing'): # Se a info da imagem foi usada
                 st.session_state.last_uploaded_image_info_pricing = None # Limpa para n√£o usar no pr√≥ximo input automaticamente
            st.session_state.user_input_processed_pricing = False 

        if st.sidebar.button("Reiniciar C√°lculo de Pre√ßos", key="btn_reset_precos_v8"): # Nova key
            inicializar_ou_resetar_chat(current_section_key, "Ok, vamos come√ßar um novo c√°lculo de pre√ßos! Voc√™ quer precificar um produto que voc√™ COMPRA E REVENDE, ou um produto/servi√ßo que voc√™ MESMO PRODUZ/CRIA?", agente.memoria_calculo_precos)
            st.rerun()

    elif current_section_key == "gerador_ideias": 
        st.header("üí° Gerador de Ideias para seu Neg√≥cio com IA")
        st.caption("Descreva seus desafios ou √°reas onde busca inova√ß√£o, e vamos encontrar solu√ß√µes juntos!")
        
        if not st.session_state.get(f"chat_display_{current_section_key}", []): 
            inicializar_ou_resetar_chat(current_section_key, "Ol√°! Sou o Assistente PME Pro. Estou aqui para te ajudar a ter novas ideias para o seu neg√≥cio. Conte-me um pouco sobre um desafio, uma dor ou uma √°rea que voc√™ gostaria de inovar.", agente.memoria_gerador_ideias)

        uploaded_files_ideias_ui = st.file_uploader(
            "Envie arquivos com informa√ß√µes (.txt, .png, .jpg):",
            type=["txt", "png", "jpg", "jpeg"], 
            accept_multiple_files=True, 
            key="ideias_file_uploader_v3" 
        )
        
        contexto_para_ia_ideias = None 
        if uploaded_files_ideias_ui:
            current_file_ids_ui = sorted([f.id for f in uploaded_files_ideias_ui])
            # Processa os arquivos somente se forem diferentes dos j√° processados ou se o contexto ainda n√£o foi preparado para o prompt
            if st.session_state.get('processed_file_id_ideias') != current_file_ids_ui or not st.session_state.get('uploaded_file_info_ideias_for_prompt'):
                text_contents_ui = []
                image_info_ui = []
                for uploaded_file_item in uploaded_files_ideias_ui:
                    try:
                        if uploaded_file_item.type == "text/plain":
                            file_content_ui = uploaded_file_item.read().decode("utf-8")
                            text_contents_ui.append(f"Conte√∫do do arquivo de texto '{uploaded_file_item.name}':\n{file_content_ui[:1500]}...") 
                        elif uploaded_file_item.type in ["image/png", "image/jpeg"]:
                            st.image(Image.open(uploaded_file_item), caption=f"Imagem: {uploaded_file_item.name}", width=100)
                            image_info_ui.append(f"O usu√°rio tamb√©m carregou uma imagem chamada '{uploaded_file_item.name}'.")
                    except Exception as e:
                        st.error(f"Erro ao processar o arquivo '{uploaded_file_item.name}': {e}")
                
                full_context_ui = ""
                if text_contents_ui: full_context_ui += "\n\n--- CONTE√öDO DE ARQUIVOS DE TEXTO ---\n" + "\n\n".join(text_contents_ui)
                if image_info_ui: full_context_ui += "\n\n--- INFORMA√á√ÉO SOBRE IMAGENS CARREGADAS ---\n" + "\n".join(image_info_ui)
                
                if full_context_ui:
                    st.session_state.uploaded_file_info_ideias_for_prompt = full_context_ui.strip()
                    st.info("Arquivo(s) pronto(s) para serem considerados no pr√≥ximo di√°logo.")
                else: # Se nenhum arquivo foi processado com sucesso mas houve tentativa de upload
                    st.session_state.uploaded_file_info_ideias_for_prompt = None

                st.session_state.processed_file_id_ideias = current_file_ids_ui
        
        kwargs_ideias_chat_ui = {}
        # Passa o contexto dos arquivos se ele existir no session_state
        if st.session_state.get('uploaded_file_info_ideias_for_prompt'):
            kwargs_ideias_chat_ui['contexto_arquivos'] = st.session_state.uploaded_file_info_ideias_for_prompt
        
        exibir_chat_e_obter_input(current_section_key, "Descreva seu desafio ou pe√ßa ideias:", agente.gerar_ideias_para_negocios, **kwargs_ideias_chat_ui)
        
        # Limpa o contexto do arquivo AP√ìS ter sido potencialmente usado pela IA na chamada acima
        if 'user_input_processed_ideias' in st.session_state and st.session_state.user_input_processed_ideias:
            if st.session_state.get('uploaded_file_info_ideias_for_prompt'):
                st.session_state.uploaded_file_info_ideias_for_prompt = None 
            st.session_state.user_input_processed_ideias = False
        
        if st.sidebar.button("Nova Sess√£o de Ideias", key="btn_reset_ideias_v4"): 
            inicializar_ou_resetar_chat(current_section_key, "Ok, vamos come√ßar uma nova busca por ideias! Conte-me sobre um novo desafio, dor ou √°rea para inovar.", agente.memoria_gerador_ideias)
            st.rerun()
else:
    st.error("üö® O Assistente PME Pro n√£o p√¥de ser iniciado. Verifique a API Key e o modelo LLM.")

st.sidebar.markdown("---")
# >>>>> LINHA QUE VOC√ä QUERIA ALTERAR (abaixo) <<<<<
st.sidebar.info("Desenvolvido por Yaakov Israel com AI Google") # TEXTO ALTERADO
